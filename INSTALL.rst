******************
 MCL Installation
******************

.. contents::

Want to install the MCL_ Site on your own system?  You're in the right place.


Requirements
============

The following requirements must be met before running the deployment script:

• `Apache HTTPD`_ 2.4; you can use another front end web server, but we
  generate configurations automatically for Apache HTTPD
• OpenSSL_ 1.0.2 or similar with development headers
• LibJPEG_ 6.2 or similar with development headers
• Certificate and key files for the HTTPS domain name used to access the site
• Regular Unix build environment with C compiler, ``make``, etc.
• Internet access; the deployment process downloads several components during
  setup
• About 2 gigabytes disk space
• A dedicated, unprivileged account to run the software, say ``mcl``; this
  account will also need access to its own crontab


Extracting the Archive
======================

The MCL Site software comes in a BZIP2-compressed TAR format archive that
contains a single top-level directory tree named ``mcl-site-X.Y.Z``, where
X.Y.Z refers to the version number.  Extract this directory tree where you
would like the site software to live.

For example, if you created a user ``mcl`` and want the software to run
``~mcl``, you might run::

    cd ~mcl
    sudo -Hu mcl tar xjf /tmp/mcl-site-X.Y.Z.tar.bz2

Throughout the rest of this document we'll call this directory the
``$INSTALL_DIR``.  For example, if you extracted ``mcl-site-1.2.3`` to
``~mcl``, the ``$INSTALL_DIR`` is (typically) ``/home/mcl/mcl-site-1.2.3``.


Running the Deployment Script
=============================

The MCL software includes an automatic deployment script, ``deploy.py`` that
downloads additional dependencies (the Plone_ content management system, the
Zope_ application server, the MCL site-specific software, etc.), compiles and
configures them, and gets everything set up just right to support MCL.

Run it as the user account you intend to also run the MCL site software.
Simply type::

    cd $INSTALL_DIR
    ./deploy.py [OPTIONS] HOSTNAME

Replace HOSTNAME with the name of the public hostname via which the site will
be accessed:

• Use ``mcl-dev.nci.nih.gov`` for the development tier
• Use ``mcl-test.nci.nih.gov`` for the staging tier
• Use ``mcl.nci.nih.gov`` for the production tier.  For production, you *must*
  supply the option ``--existing-install`` that tells where the previous
  version of the MCL site exists so its content database can be migrated over
  and updated.

If the script fails to run, you may went to specify the Python interpreter;
for example, type::

    /usr/bin/python ./deploy.py mcl-dev.nci.nih.gov

The ``deploy.py`` script supports additional options.  Run::

    ./deploy.py --help

to see all the options.

The deployment script will produce a detailed log file in the current
directory called ``deploy.log``.  Consult this file if things go wrong.

Once you get a clean run of ``deploy.py``, shut down the old version of
the site by running ``$OLD_INSTALL_DIR/bin/supervisorctl shutdown``.  You
can then start the new version by running::

    sudo -Hu mcl $INSTALL_DIR/bin/supervisord

You can check if the processes are OK by running::

    $INSTALL_DIR/bin/supervisorctl status

You should see two processes running, ``zeo`` and ``zope``.


Front End Web Server
====================

A successful run of ``deploy.py`` will produce two Apache HTTPD configuration
files in ``$INSTALL_DIR/parts/templates``:

• ``apache-httpd.conf``
• ``apache-httpd-ssl.conf``

Use these files as *guidelines* on how to configure your Apache HTTPD.  Once
set up, don't forget to reload the Apache HTTPD configuration.  Be sure to
double-check the paths to the SSL certificate and key files (not included).

Once Apache HTTPD is reloaded, you should be able to view the site at
``http://PUBLIC-HOSTNAME/`` and ``https://PUBLIC-HOSTNAME/``.


Cron Jobs
=========

The ``deploy.py`` script automatically installed four user-level cron jobs:

• A daily job that runs ``$INSTALL_DIR/bin/backup``.  This creates a daily
  backup of the site's object database for emergency restoration in case of
  catastrophic failure, hackers, etc.
• A weekly job that runs ``$INSTALL_DIR/bin/snapshotbackup``.  This takes a
  weekly snapshot of the site's object database for use by the MCL site
  developers.
• A monthly job that runs ``$INSTALL_DIR/bin/zeopack``.  This removes old data
  from the site's object database to keep it from growing unwieldy.
• A boot-up job that runs ``$INSTALL_DIR/bin/supervisord``.  This lets the
  site's software start after every reboot.

*Note:* You will want to run ``crontab -e`` to delete any old references to
the site left by previous runs of ``deploy.py``.  Alternatively, you may
wish to remove the version-specific paths generated by ``deploy.py`` and
employ a symbolic link that points to the latest version at all times.


Log File Rotation
=================

The ``deploy.py`` script also creates a configuration file for the log file
rotation system included on moth Unix-like systems.  The file is in
``$INSTALL_DIR/parts/templates/logrotate.cfg``.  Install this file into
the standard logfile rotation configuration directory, and edit the file
as needed to adjust paths.

You might run::

    sudo install -o root -g root -m 644 parts/templates/logrotate.cfg /etc/logrotate.d/mcl

*Note:* You may want to edit the file to adjust the path if you use a symbolic
link to point to the latest ``$INSTALL_DIR``.


Clean Up
========

The site software included an initial set of content that was loaded into the
site's object database.  Now that it's loaded you can delete the initial
content files by removing the ``$INSTALL_DIR/data`` directory and the files
it contains.


Questions, Bug Reports, and Help
================================

For feedback about this product, please visit the feedback page at
http://cancer.jpl.nasa.gov/contact-info.


.. References:
.. _MCL: http://mcl.nci.nih.gov/
.. _Debian: https://www.debian.org/
.. _Unix: https://en.wikipedia.org/wiki/Unix
.. _`Apache HTTPD`: http://httpd.apache.org/
.. _OpenSSL: https://www.openssl.org/
.. _LibJPEG: https://jpeg.org/
.. _Plone: https://plone.org/
.. _Zope: http://www.zope.org/
